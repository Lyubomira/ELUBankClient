
import java.awt.CardLayout;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author USER
 */
public class RegistrationForm extends javax.swing.JFrame {

    /**
     * Creates new form SetNewClient
     */
    DefaultTableModel modelTable, DeleteModel;

    public RegistrationForm() {

        initComponents();

        for (int count = 0; count < 21; count++) {
            Accounts_table.setRowHeight(count, 25);
            Accounts_table.setFont(new Font("Times New Roman", Font.PLAIN, 14));
        }
        modelTable = (DefaultTableModel) Accounts_table.getModel();
        modelTable.setColumnIdentifiers(new Object[]{
            "IBAN ", "N на сметка", "Тип на сметка", "Сума", "Валута"});
        for (int i = 0; i < 21; i++) {
            modelTable.insertRow(i, new Object[]{});

        }

        for (int count = 0; count < 21; count++) {
            allClientsTable.setRowHeight(count, 25);
            allClientsTable.setFont(new Font("Times New Roman", Font.PLAIN, 14));
        }
        DeleteModel = (DefaultTableModel) allClientsTable.getModel();
        DeleteModel.setColumnIdentifiers(new Object[]{
            "Име ", "Презиме", "Фамилия", "ЕГН", "Град", "Адрес", "Телефон"});
        for (int i = 0; i < 21; i++) {
            DeleteModel.insertRow(i, new Object[]{});

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        currencyTypeBtnGrp = new javax.swing.ButtonGroup();
        ELUBank_lbl = new javax.swing.JLabel();
        MenuCardLayoutPanel = new javax.swing.JPanel();
        ManagementPanel = new javax.swing.JPanel();
        CreateNewClientButton = new javax.swing.JButton();
        CreateNewAccountButton = new javax.swing.JButton();
        DeleteBankingAccount = new javax.swing.JButton();
        DeleteClient = new javax.swing.JButton();
        exit_btn = new javax.swing.JButton();
        CentralCardLayoutPanel = new javax.swing.JPanel();
        WelcomePanel = new javax.swing.JPanel();
        Welcome_lbl = new javax.swing.JLabel();
        RegistrationPanel = new javax.swing.JPanel();
        name_lbl = new javax.swing.JLabel();
        secondname_lbl = new javax.swing.JLabel();
        familyname_lbl = new javax.swing.JLabel();
        egn_lbl = new javax.swing.JLabel();
        address_lbl = new javax.swing.JLabel();
        Nme_registr = new javax.swing.JTextField();
        secondName_resitr = new javax.swing.JTextField();
        surNme_registr = new javax.swing.JTextField();
        PIN_registr = new javax.swing.JTextField();
        address_registr = new javax.swing.JTextField();
        country_lbl = new javax.swing.JLabel();
        comboBoxCountry = new javax.swing.JComboBox();
        city_lbl = new javax.swing.JLabel();
        city_registr = new javax.swing.JTextField();
        telephone_lbl = new javax.swing.JLabel();
        email_lbl = new javax.swing.JLabel();
        phone_restr = new javax.swing.JTextField();
        mail_registr = new javax.swing.JTextField();
        ConfirmButton = new javax.swing.JButton();
        username_lbl = new javax.swing.JLabel();
        userName_txt = new javax.swing.JTextField();
        idtype_lbl = new javax.swing.JLabel();
        CancelButton = new javax.swing.JButton();
        dateOfBirth_lbl = new javax.swing.JLabel();
        comboBoxDateOfBirth = new javax.swing.JComboBox();
        comboBoxMonthOfBirth = new javax.swing.JComboBox();
        comboBoxYearOfBirth = new javax.swing.JComboBox();
        comboBoxUserType = new javax.swing.JComboBox();
        NewAccountPanel = new javax.swing.JPanel();
        Fname_lbl = new javax.swing.JLabel();
        Sname_lbl = new javax.swing.JLabel();
        Lname_lbl = new javax.swing.JLabel();
        Egn_lbl = new javax.swing.JLabel();
        egn_txt = new javax.swing.JTextField();
        typeOfaccount_comboBox = new javax.swing.JComboBox();
        accountType_lbl = new javax.swing.JLabel();
        serach = new javax.swing.JButton();
        separator = new javax.swing.JLabel();
        currency_lbl = new javax.swing.JLabel();
        CheckBox_Panel = new javax.swing.JPanel();
        BGN_checkbox = new javax.swing.JCheckBox();
        EUR_checkbox = new javax.swing.JCheckBox();
        USD_checkbox = new javax.swing.JCheckBox();
        initialAmount_lbl = new javax.swing.JLabel();
        InitialAmount_txt = new javax.swing.JTextField();
        Create_createAccount_btn = new javax.swing.JButton();
        iban_lbl = new javax.swing.JLabel();
        IBAN_txt = new javax.swing.JTextField();
        FirstName_lbl = new javax.swing.JLabel();
        SecondName_lbl = new javax.swing.JLabel();
        FamilyName_lbl = new javax.swing.JLabel();
        DeleteAccountPanel = new javax.swing.JPanel();
        egn_deleteAccount_lbl = new javax.swing.JLabel();
        EGN_deleteAccount_txt = new javax.swing.JTextField();
        search_deleteAccount_btn = new javax.swing.JButton();
        Fname_deleteAccount_lbl = new javax.swing.JLabel();
        FirstName_deleteAccount_lbl = new javax.swing.JLabel();
        secondnme_lbl = new javax.swing.JLabel();
        SecondName_deleteAccount_lbl = new javax.swing.JLabel();
        lastnme_lbl = new javax.swing.JLabel();
        LastName_deleteAccount_lbl = new javax.swing.JLabel();
        table_ScrollPane = new javax.swing.JScrollPane();
        Accounts_table = new javax.swing.JTable();
        Delete_deleteAccount_btn = new javax.swing.JButton();
        Cancel_deleteAccount_btn = new javax.swing.JButton();
        DeleteClientPanel = new javax.swing.JPanel();
        clientEgn_lbl = new javax.swing.JLabel();
        clientEgn_txt = new javax.swing.JTextField();
        searchClient_btn = new javax.swing.JButton();
        TableScrollPane1 = new javax.swing.JScrollPane();
        allClientsTable = new javax.swing.JTable();
        BackgroundLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1040, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ELUBank_lbl.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        ELUBank_lbl.setForeground(new java.awt.Color(0, 153, 153));
        ELUBank_lbl.setText("ELU Bank");
        getContentPane().add(ELUBank_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 550, -1, -1));

        MenuCardLayoutPanel.setMaximumSize(new java.awt.Dimension(170, 430));
        MenuCardLayoutPanel.setMinimumSize(new java.awt.Dimension(170, 430));
        MenuCardLayoutPanel.setOpaque(false);
        MenuCardLayoutPanel.setPreferredSize(new java.awt.Dimension(200, 430));
        MenuCardLayoutPanel.setLayout(new java.awt.CardLayout());

        ManagementPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Панел за управление", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 18), new java.awt.Color(0, 153, 153))); // NOI18N
        ManagementPanel.setOpaque(false);
        ManagementPanel.setPreferredSize(new java.awt.Dimension(200, 430));

        CreateNewClientButton.setBackground(new java.awt.Color(168, 199, 200));
        CreateNewClientButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        CreateNewClientButton.setText("Създаване на нов клиент");
        CreateNewClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateNewClientButtonActionPerformed(evt);
            }
        });
        CreateNewClientButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CreateNewClientButtonKeyPressed(evt);
            }
        });

        CreateNewAccountButton.setBackground(new java.awt.Color(168, 199, 200));
        CreateNewAccountButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        CreateNewAccountButton.setText("Откриване на сметка");
        CreateNewAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateNewAccountButtonActionPerformed(evt);
            }
        });
        CreateNewAccountButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CreateNewAccountButtonKeyPressed(evt);
            }
        });

        DeleteBankingAccount.setBackground(new java.awt.Color(168, 199, 200));
        DeleteBankingAccount.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        DeleteBankingAccount.setText("Закриване на сметка");
        DeleteBankingAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBankingAccountActionPerformed(evt);
            }
        });
        DeleteBankingAccount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DeleteBankingAccountKeyPressed(evt);
            }
        });

        DeleteClient.setBackground(new java.awt.Color(168, 199, 200));
        DeleteClient.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        DeleteClient.setText("Закриване на потребител");
        DeleteClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteClientActionPerformed(evt);
            }
        });
        DeleteClient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DeleteClientKeyPressed(evt);
            }
        });

        exit_btn.setBackground(new java.awt.Color(168, 199, 200));
        exit_btn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        exit_btn.setText("Изход");
        exit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_btnActionPerformed(evt);
            }
        });
        exit_btn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                exit_btnKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout ManagementPanelLayout = new javax.swing.GroupLayout(ManagementPanel);
        ManagementPanel.setLayout(ManagementPanelLayout);
        ManagementPanelLayout.setHorizontalGroup(
            ManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManagementPanelLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(ManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(exit_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DeleteClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DeleteBankingAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CreateNewAccountButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CreateNewClientButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36))
        );
        ManagementPanelLayout.setVerticalGroup(
            ManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManagementPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(CreateNewClientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CreateNewAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DeleteBankingAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DeleteClient, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addComponent(exit_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        MenuCardLayoutPanel.add(ManagementPanel, "card2");

        getContentPane().add(MenuCardLayoutPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 260, 450));

        CentralCardLayoutPanel.setMaximumSize(new java.awt.Dimension(804, 680));
        CentralCardLayoutPanel.setMinimumSize(new java.awt.Dimension(804, 680));
        CentralCardLayoutPanel.setOpaque(false);
        CentralCardLayoutPanel.setPreferredSize(new java.awt.Dimension(804, 680));
        CentralCardLayoutPanel.setLayout(new java.awt.CardLayout());

        WelcomePanel.setOpaque(false);
        WelcomePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Welcome_lbl.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        Welcome_lbl.setForeground(new java.awt.Color(0, 153, 153));
        Welcome_lbl.setText("Добре дошли в системата за управление на клиенти");
        WelcomePanel.add(Welcome_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 610, 80));

        CentralCardLayoutPanel.add(WelcomePanel, "card5");

        RegistrationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Регистрация", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 18), new java.awt.Color(0, 153, 153))); // NOI18N
        RegistrationPanel.setForeground(new java.awt.Color(0, 153, 153));
        RegistrationPanel.setMaximumSize(new java.awt.Dimension(804, 680));
        RegistrationPanel.setMinimumSize(new java.awt.Dimension(804, 680));
        RegistrationPanel.setOpaque(false);
        RegistrationPanel.setPreferredSize(new java.awt.Dimension(804, 680));
        RegistrationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        name_lbl.setText("Име");
        RegistrationPanel.add(name_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, -1));

        secondname_lbl.setText("Презиме");
        RegistrationPanel.add(secondname_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, -1, -1));

        familyname_lbl.setText("Фамилия");
        RegistrationPanel.add(familyname_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, -1, -1));

        egn_lbl.setText("ЕГН");
        RegistrationPanel.add(egn_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, -1, -1));

        address_lbl.setText("Адрес:  обл./.........ул./........№/....етl./....ап./.... ");
        RegistrationPanel.add(address_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 360, -1, -1));

        Nme_registr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Nme_registrKeyPressed(evt);
            }
        });
        RegistrationPanel.add(Nme_registr, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 160, -1));

        secondName_resitr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                secondName_resitrKeyPressed(evt);
            }
        });
        RegistrationPanel.add(secondName_resitr, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 160, -1));

        surNme_registr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                surNme_registrKeyPressed(evt);
            }
        });
        RegistrationPanel.add(surNme_registr, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 160, -1));

        PIN_registr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PIN_registrKeyPressed(evt);
            }
        });
        RegistrationPanel.add(PIN_registr, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 160, -1));

        address_registr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                address_registrKeyPressed(evt);
            }
        });
        RegistrationPanel.add(address_registr, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 380, -1));

        country_lbl.setText("Държава");
        RegistrationPanel.add(country_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, -1, -1));

        comboBoxCountry.setBackground(new java.awt.Color(160, 199, 200));
        comboBoxCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Изберете държава", "Австралия", "Австрия", "Азербайджан", "Албания", "Алжир", "Американска Самоа", "Англия", "Ангола", "Андора", "Антигуа и Барбуда", "Аржентина", "Армения", "Афганистан", "Бангладеш", "Барбадос", "Бахамски острови", "Бахрейн", "Беларус", "Белгия", "Белиз", "Бенин", "Боливия", "Босна и Херцеговина", "Ботсвана", "Бразилия", "Бруней", "Буркина Фасо", "Бурунди", "Бутан", "България", "Вануату", "Ватикан", "Венецуела", "Виетнам", "Габон", "Гамбия", "Гана", "Гватемала", "Гвиана", "Гвинея", "Гвинея-Бисау", "Германия", "Гренада", "Гренландия", "Грузия", "Гуам", "Гърция", "Дания", "Демократична република Конго", "Джибути", "Доминиканска република", "Доминика", "Египет", "Еквадор", "Екваториална Гвинея", "Еритрея", "Естония", "Етиопия", "Замбия", "Западна Сахара", "Зимбабве", "Израел", "Източен Тимор", "Индия", "Индонезия", "Ирак", "Иран", "Ирландия", "Исландия", "Испания", "Италия", "Йемен", "Йордания", "Кабо Верде", "Казахстан", "Камбоджа", "Камерун", "Канада", "Катар", "Кения", "Кипър", "Киргизстан", "Кирибати", "Китай", "Колумбия", "Коморски острови", "Конго", "Коста Рика", "Кот д'Ивоар", "Куба", "Кувейт", "Лаос", "Латвия", "Лесото", "Либерия", "Либия", "Лисабон", "Литва", "Лихтенщайн", "Люксембург", "Мавритания", "Мавриций", "Мадагаскар", "Македония", "Малави", "Малайзия", "Малдиви", "Мали", "Малта", "Мариански острови", "Мароко", "Маршалови острови", "Мексико", "Мианмар", "Микронезия", "Мозамбик", "Молдова", "Монако", "Монголия", "Намибия", "Непал", "Нигерия", "Нигер", "Никарагуа", "Ниуе", "Нова Зеландия", "Нова Каледония", "Норвегия", "ОАЕ", "Оман", "Острови Кук", "Пакистан", "Палау", "Панама", "Папуа - Нова Гвинея", "Парагвай", "Перу", "Питкерн", "Полша", "Португалия", "Руанда", "Румъния", "Русия", "Русия", "САЩ", "Салвадор", "Самоа", "Сан Марино", "Саудитска Арабия", "Свазиленд", "Северна Корея", "Сейнт Винсент и Гренадини", "Сейнт Китс и Невис", "Сейнт Лусия", "Сейшелски острови", "Сенегал", "Сиера Леоне", "Сингапур", "Сирия", "Словакия", "Словения", "Соломонови острови", "Сомалия", "Судан", "Суринам", "Сърбия", "Таджикистан", "Тайван", "Тайланд", "Танзания", "Тибет", "Того", "Тонга", "Тринидад и Тобаго", "Тувалу", "Тунис", "Туркменистан", "Турция", "Турция", "Уганда", "Узбекистан", "Украйна", "Унгария", "Уругвай", "Фиджи", "Филипини", "Финландия", "Франция", "Френска Полинезия", "Хаити", "Холандия", "Хондурас", "Хърватия", "ЦАР", "Чад", "Черна гора", "Чехия", "Чили", "Швейцария", "Швеция", "Шри Ланка", "ЮАР", "Южна Корея", "Ямайка", "Япония" }));
        comboBoxCountry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboBoxCountryKeyPressed(evt);
            }
        });
        RegistrationPanel.add(comboBoxCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 160, -1));

        city_lbl.setText("Град");
        RegistrationPanel.add(city_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 320, 30, -1));

        city_registr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                city_registrKeyPressed(evt);
            }
        });
        RegistrationPanel.add(city_registr, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 310, 160, -1));

        telephone_lbl.setText("Телефонен номер");
        RegistrationPanel.add(telephone_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, -1, -1));

        email_lbl.setText("E-mail ");
        RegistrationPanel.add(email_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 440, -1, -1));

        phone_restr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phone_restrKeyPressed(evt);
            }
        });
        RegistrationPanel.add(phone_restr, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 160, -1));

        mail_registr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mail_registrKeyPressed(evt);
            }
        });
        RegistrationPanel.add(mail_registr, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 440, 160, -1));

        ConfirmButton.setBackground(new java.awt.Color(168, 199, 200));
        ConfirmButton.setText("Потвърди");
        ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmButtonActionPerformed(evt);
            }
        });
        RegistrationPanel.add(ConfirmButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 520, 90, 30));

        username_lbl.setText("Потребителско име");
        RegistrationPanel.add(username_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, -1, -1));

        userName_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userName_txtKeyPressed(evt);
            }
        });
        RegistrationPanel.add(userName_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 160, -1));

        idtype_lbl.setText("Ниво на достъп");
        RegistrationPanel.add(idtype_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, -1, -1));

        CancelButton.setBackground(new java.awt.Color(168, 199, 200));
        CancelButton.setText("Откажи");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });
        RegistrationPanel.add(CancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 520, 90, 30));

        dateOfBirth_lbl.setText("Дата на раждане");
        RegistrationPanel.add(dateOfBirth_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, -1, -1));

        comboBoxDateOfBirth.setBackground(new java.awt.Color(168, 199, 200));
        comboBoxDateOfBirth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "[Ден]", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "" }));
        comboBoxDateOfBirth.setMaximumSize(new java.awt.Dimension(61, 20));
        comboBoxDateOfBirth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboBoxDateOfBirthKeyPressed(evt);
            }
        });
        RegistrationPanel.add(comboBoxDateOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 70, -1));

        comboBoxMonthOfBirth.setBackground(new java.awt.Color(168, 199, 200));
        comboBoxMonthOfBirth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "[Месец]", "Jan", "Feb", "March", "April", "May", "June", "July", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        comboBoxMonthOfBirth.setMaximumSize(new java.awt.Dimension(61, 20));
        RegistrationPanel.add(comboBoxMonthOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 210, 70, -1));

        comboBoxYearOfBirth.setBackground(new java.awt.Color(168, 199, 200));
        comboBoxYearOfBirth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "[Година]", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "", "" }));
        comboBoxYearOfBirth.setMaximumSize(new java.awt.Dimension(61, 20));
        RegistrationPanel.add(comboBoxYearOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 210, 70, -1));

        comboBoxUserType.setBackground(new java.awt.Color(160, 199, 200));
        comboBoxUserType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Изберете тип на потребителя", "Банков служител", "Депозиращ Клиент", "Клиент" }));
        comboBoxUserType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboBoxUserTypeKeyPressed(evt);
            }
        });
        RegistrationPanel.add(comboBoxUserType, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 470, 160, -1));

        CentralCardLayoutPanel.add(RegistrationPanel, "RegistrationCard");
        RegistrationPanel.getAccessibleContext().setAccessibleParent(CentralCardLayoutPanel);

        NewAccountPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Нова сметка", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 18), new java.awt.Color(0, 153, 153))); // NOI18N
        NewAccountPanel.setMaximumSize(new java.awt.Dimension(804, 680));
        NewAccountPanel.setMinimumSize(new java.awt.Dimension(804, 680));
        NewAccountPanel.setOpaque(false);
        NewAccountPanel.setPreferredSize(new java.awt.Dimension(804, 680));
        NewAccountPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Fname_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Fname_lbl.setText("Име");
        NewAccountPanel.add(Fname_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, -1, -1));

        Sname_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Sname_lbl.setText("Презиме");
        NewAccountPanel.add(Sname_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, -1, -1));

        Lname_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Lname_lbl.setText("Фамилия");
        NewAccountPanel.add(Lname_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, -1, 20));

        Egn_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Egn_lbl.setText("Единен Граждански Номер (ЕГН)");
        NewAccountPanel.add(Egn_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        egn_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                egn_txtKeyPressed(evt);
            }
        });
        NewAccountPanel.add(egn_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 130, -1));

        typeOfaccount_comboBox.setBackground(new java.awt.Color(160, 199, 200));
        typeOfaccount_comboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Изберете вид", "-----------------------------", "Стандартен депозит", "С фиксирана лихва", "Разплащателна сметка", " " }));
        typeOfaccount_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeOfaccount_comboBoxActionPerformed(evt);
            }
        });
        typeOfaccount_comboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                typeOfaccount_comboBoxKeyPressed(evt);
            }
        });
        NewAccountPanel.add(typeOfaccount_comboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 180, -1));

        accountType_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        accountType_lbl.setText("Вид на сметката");
        NewAccountPanel.add(accountType_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, -1, -1));

        serach.setBackground(new java.awt.Color(168, 199, 200));
        serach.setText("Търси");
        serach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serachActionPerformed(evt);
            }
        });
        NewAccountPanel.add(serach, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, -1, -1));

        separator.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        separator.setForeground(new java.awt.Color(0, 102, 102));
        separator.setText("-----------------------------------------------------------------------------------------------------------------------");
        NewAccountPanel.add(separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        currency_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        currency_lbl.setText("Валута");
        NewAccountPanel.add(currency_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, -1, -1));

        CheckBox_Panel.setOpaque(false);

        currencyTypeBtnGrp.add(BGN_checkbox);
        BGN_checkbox.setSelected(true);
        BGN_checkbox.setText("BGN");

        currencyTypeBtnGrp.add(EUR_checkbox);
        EUR_checkbox.setText("EUR");

        currencyTypeBtnGrp.add(USD_checkbox);
        USD_checkbox.setText("USD");

        javax.swing.GroupLayout CheckBox_PanelLayout = new javax.swing.GroupLayout(CheckBox_Panel);
        CheckBox_Panel.setLayout(CheckBox_PanelLayout);
        CheckBox_PanelLayout.setHorizontalGroup(
            CheckBox_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CheckBox_PanelLayout.createSequentialGroup()
                .addComponent(BGN_checkbox)
                .addGap(18, 18, 18)
                .addComponent(EUR_checkbox)
                .addGap(18, 18, 18)
                .addComponent(USD_checkbox)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        CheckBox_PanelLayout.setVerticalGroup(
            CheckBox_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CheckBox_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CheckBox_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BGN_checkbox)
                    .addComponent(EUR_checkbox)
                    .addComponent(USD_checkbox))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        NewAccountPanel.add(CheckBox_Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, 190, 40));

        initialAmount_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        initialAmount_lbl.setText("Първоначална сума");
        NewAccountPanel.add(initialAmount_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 410, -1, -1));

        InitialAmount_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InitialAmount_txtKeyPressed(evt);
            }
        });
        NewAccountPanel.add(InitialAmount_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 410, 180, -1));

        Create_createAccount_btn.setBackground(new java.awt.Color(168, 199, 200));
        Create_createAccount_btn.setText("Създай");
        Create_createAccount_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Create_createAccount_btnActionPerformed(evt);
            }
        });
        NewAccountPanel.add(Create_createAccount_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 410, -1, -1));

        iban_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        iban_lbl.setText("Вашата нова сметка е с IBAN ");
        NewAccountPanel.add(iban_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 530, -1, -1));
        NewAccountPanel.add(IBAN_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 530, 310, -1));
        NewAccountPanel.add(FirstName_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, -1, -1));
        NewAccountPanel.add(SecondName_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, -1, -1));
        NewAccountPanel.add(FamilyName_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, -1, -1));

        CentralCardLayoutPanel.add(NewAccountPanel, "createAccountCard");

        DeleteAccountPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Закриване на сметка", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 18), new java.awt.Color(0, 153, 153))); // NOI18N
        DeleteAccountPanel.setOpaque(false);
        DeleteAccountPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        egn_deleteAccount_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        egn_deleteAccount_lbl.setText("Единен Граждански Номер");
        DeleteAccountPanel.add(egn_deleteAccount_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        EGN_deleteAccount_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EGN_deleteAccount_txtKeyPressed(evt);
            }
        });
        DeleteAccountPanel.add(EGN_deleteAccount_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 120, -1));

        search_deleteAccount_btn.setBackground(new java.awt.Color(168, 199, 200));
        search_deleteAccount_btn.setText("Търси");
        search_deleteAccount_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_deleteAccount_btnActionPerformed(evt);
            }
        });
        DeleteAccountPanel.add(search_deleteAccount_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, -1, -1));

        Fname_deleteAccount_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Fname_deleteAccount_lbl.setText("Име");
        DeleteAccountPanel.add(Fname_deleteAccount_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, -1, -1));
        DeleteAccountPanel.add(FirstName_deleteAccount_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, -1, -1));

        secondnme_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        secondnme_lbl.setText("Презиме");
        DeleteAccountPanel.add(secondnme_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, -1, -1));
        DeleteAccountPanel.add(SecondName_deleteAccount_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, -1, -1));

        lastnme_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lastnme_lbl.setText("Фамилия");
        DeleteAccountPanel.add(lastnme_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, -1, -1));
        DeleteAccountPanel.add(LastName_deleteAccount_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, -1, -1));

        Accounts_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IBAN", "N сметка", "Тип сметка", "Сума", "Валута"
            }
        ));
        Accounts_table.setColumnSelectionAllowed(true);
        Accounts_table.setOpaque(false);
        table_ScrollPane.setViewportView(Accounts_table);
        Accounts_table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (Accounts_table.getColumnModel().getColumnCount() > 0) {
            Accounts_table.getColumnModel().getColumn(2).setMinWidth(100);
            Accounts_table.getColumnModel().getColumn(2).setPreferredWidth(100);
            Accounts_table.getColumnModel().getColumn(2).setMaxWidth(100);
            Accounts_table.getColumnModel().getColumn(3).setMinWidth(100);
            Accounts_table.getColumnModel().getColumn(3).setPreferredWidth(100);
            Accounts_table.getColumnModel().getColumn(3).setMaxWidth(100);
            Accounts_table.getColumnModel().getColumn(4).setMinWidth(50);
            Accounts_table.getColumnModel().getColumn(4).setPreferredWidth(50);
            Accounts_table.getColumnModel().getColumn(4).setMaxWidth(50);
        }

        DeleteAccountPanel.add(table_ScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 590, 320));

        Delete_deleteAccount_btn.setBackground(new java.awt.Color(168, 199, 200));
        Delete_deleteAccount_btn.setText("Изтрий");
        Delete_deleteAccount_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_deleteAccount_btnActionPerformed(evt);
            }
        });
        DeleteAccountPanel.add(Delete_deleteAccount_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 550, 90, -1));

        Cancel_deleteAccount_btn.setBackground(new java.awt.Color(168, 199, 200));
        Cancel_deleteAccount_btn.setText("Откажи");
        Cancel_deleteAccount_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel_deleteAccount_btnActionPerformed(evt);
            }
        });
        DeleteAccountPanel.add(Cancel_deleteAccount_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 550, 90, -1));

        CentralCardLayoutPanel.add(DeleteAccountPanel, "DeleteAcntCard");

        DeleteClientPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Закриване на поребител", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 14), new java.awt.Color(0, 153, 153))); // NOI18N
        DeleteClientPanel.setOpaque(false);
        DeleteClientPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clientEgn_lbl.setText("Единен граждански номер");
        DeleteClientPanel.add(clientEgn_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        clientEgn_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                clientEgn_txtKeyPressed(evt);
            }
        });
        DeleteClientPanel.add(clientEgn_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 150, -1));

        searchClient_btn.setText("Търси");
        searchClient_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClient_btnActionPerformed(evt);
            }
        });
        DeleteClientPanel.add(searchClient_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, -1, -1));

        allClientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        allClientsTable.setOpaque(false);
        TableScrollPane1.setViewportView(allClientsTable);

        DeleteClientPanel.add(TableScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 590, 410));

        CentralCardLayoutPanel.add(DeleteClientPanel, "DeleteClientCard");

        getContentPane().add(CentralCardLayoutPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, 610, 590));

        BackgroundLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/abstract_background.jpg"))); // NOI18N
        BackgroundLbl.setPreferredSize(new java.awt.Dimension(1024, 720));
        getContentPane().add(BackgroundLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -5, -1, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteBankingAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBankingAccountActionPerformed
        CardLayout deleteAccount = (CardLayout) (CentralCardLayoutPanel.getLayout());
        deleteAccount.show(CentralCardLayoutPanel, "DeleteAcntCard");
        EGN_deleteAccount_txt.grabFocus();
    }//GEN-LAST:event_DeleteBankingAccountActionPerformed

    private void CreateNewClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateNewClientButtonActionPerformed
        CardLayout registrationPanel = (CardLayout) (CentralCardLayoutPanel.getLayout());
        registrationPanel.show(CentralCardLayoutPanel, "RegistrationCard");
        userName_txt.grabFocus();
    }//GEN-LAST:event_CreateNewClientButtonActionPerformed

    private void CreateNewAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateNewAccountButtonActionPerformed

        CardLayout accoutPanel = (CardLayout) (CentralCardLayoutPanel.getLayout());
        accoutPanel.show(CentralCardLayoutPanel, "createAccountCard");
        egn_txt.grabFocus();
    }//GEN-LAST:event_CreateNewAccountButtonActionPerformed

    private void ConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmButtonActionPerformed

        String user = userName_txt.getText();
        String pass = "elu" + PIN_registr.getText();
        String Fname = Nme_registr.getText();
        String Mname = secondName_resitr.getText();
        String Lname = surNme_registr.getText();
        String pin = PIN_registr.getText();
        String bday = (String) comboBoxDateOfBirth.getSelectedItem();
        String bmonth = (String) comboBoxMonthOfBirth.getSelectedItem();
        String byear = (String) comboBoxYearOfBirth.getSelectedItem();
        String country = (String) comboBoxCountry.getSelectedItem();
        String city = city_registr.getText();
        String address = address_registr.getText();
        String phone = phone_restr.getText();
        String email = mail_registr.getText();
        String access = comboBoxUserType.getSelectedIndex() + "";
        String request = "create";

        /**
         * Check if all required fields are filled in
         */
        if (user.trim().length() == 0 || Fname.length() == 0 || Mname.trim().length() == 0
                || Lname.trim().length() == 0 || pin.trim().length() == 0
                || country.trim().length() == 0 || city.trim().length() == 0
                || address.length() == 0 || phone.length() == 0 || email.length() == 0
                || comboBoxCountry.getSelectedIndex() == 0 || comboBoxDateOfBirth.getSelectedIndex() == 0
                || comboBoxMonthOfBirth.getSelectedIndex() == 0 || comboBoxYearOfBirth.getSelectedIndex() == 0
                || comboBoxUserType.getSelectedIndex() == 0) {

            JOptionPane.showMessageDialog(null, "Моля, поълнете всички полета!");
            return;
        }

        /**
         * check EGN field for 10 digits
         */
        Pattern egn_val = Pattern.compile("\\d{10,10}");
        Matcher m_val = egn_val.matcher(pin);
        if (!m_val.find()) {
            JOptionPane.showMessageDialog(null, "ЕГН може да съдържа само 10 цифри");
            return;
        } else if (!m_val.find() && pin.length() > 10) {
            JOptionPane.showMessageDialog(null, "ЕГН съдържа твърде много символи! ");
            return;
        }

        newUser = new User(user, pass, Fname, Mname, Lname, pin, bday, bmonth, byear,
                country, city, address, phone, email, access);
        newUser.setRequest(request);
        newUser = (User) client.runClient(newUser);

        if (newUser.getResponse() == null) {
            clearRegistrationForm();
            JOptionPane.showMessageDialog(null, "Успешно създадохте нов потребител!");
            return;
        }

        if (newUser.getResponse().equalsIgnoreCase("userExists")) {
            JOptionPane.showMessageDialog(null, "Съществува потребител с такова име!");
            return;
        }

        if (newUser.getResponse().equalsIgnoreCase("egnExists")) {
            JOptionPane.showMessageDialog(null, "Съществува потебител с такова ЕГН!");
            return;
        }
    }//GEN-LAST:event_ConfirmButtonActionPerformed

    private void serachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serachActionPerformed

        pin = egn_txt.getText();
        String request = "search";
        /**
         * check EGN field for 10 digits
         */

        Pattern egn_val = Pattern.compile("\\d{10,10}");
        Matcher m_val = egn_val.matcher(pin);
        if (!m_val.find()) {
            JOptionPane.showMessageDialog(null, "ЕГН може да съдържа само 10 цифри");
            return;
        } else if (!m_val.find() && pin.length() > 10) {
            JOptionPane.showMessageDialog(null, "Твърде много символи! ");
            return;
        }
        /**
         * creates new User object
         *
         */
        newUser = new User();
        newUser.setEgn(pin);
        newUser.setRequest(request);
        newUser = (User) client.runClient(newUser);
        /**
         *
         */
        if (newUser.getResponse() != null) {
            if (newUser.getResponse().equalsIgnoreCase("userNotFound")) {
                JOptionPane.showMessageDialog(null, "Не е намерен потебител с такова ЕГН!");
                return;
            }
        }

        /**
         * linking information about user from db with label fields
         */
        FirstName_lbl.setText(newUser.getName());
        SecondName_lbl.setText(newUser.getSurname());
        FamilyName_lbl.setText(newUser.getFamilyname());
    }//GEN-LAST:event_serachActionPerformed

    private void exit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
        dispose();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
                new InterestsForm().setVisible(false);
            }
        });
    }//GEN-LAST:event_exit_btnActionPerformed

    private void Create_createAccount_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Create_createAccount_btnActionPerformed

        String pin = egn_txt.getText();
        String InitialAmount_ = InitialAmount_txt.getText();
        String EUR = EUR_checkbox.getText();
        String USD = USD_checkbox.getText();
        String BGN = BGN_checkbox.getText();

        /**
         * check for selected currency
         */
        if (BGN_checkbox.isSelected()) {
            accounts.setCurrency(BGN_checkbox.getText());
        } else if (EUR_checkbox.isSelected()) {
            accounts.setCurrency(EUR_checkbox.getText());
        } else if (USD_checkbox.isSelected()) {
            accounts.setCurrency(USD_checkbox.getText());
        }
        /**
         * Check if all required fields are filled in
         */
        if (pin.trim().length() == 0 || typeOfaccount_comboBox.getSelectedIndex() == 0
                || InitialAmount_.trim().length() == 0 && BGN.trim().length() == 0
                && EUR.trim().length() == 0 && USD.trim().length() == 0) {

            JOptionPane.showMessageDialog(null, "Моля, поълнете всички полета!");
            return;
        }

        accounts.setUserEGN(egn_txt.getText());
        accounts.setAccountType(typeOfaccount_comboBox.getSelectedItem().toString());
        accounts.setAmount(InitialAmount_txt.getText());
        accounts.setRequest("create");

        do {
            IBAN_txt.setText(generateIBAN());
            accounts.setIBAN(IBAN_txt.getText());
            accounts = (Accounts) client.runClient(accounts);
        } while (accounts.getResponse() != null
                && accounts.getResponse().equalsIgnoreCase("ibanExists"));

        if (accounts.getResponse() == null) {

            JOptionPane.showMessageDialog(null, "Успешно създадохте нова потребителска сметка!\n"
                    + "IBAN: " + IBAN_txt.getText());

        }
        clearNewAccountForm();


    }//GEN-LAST:event_Create_createAccount_btnActionPerformed

    private void typeOfaccount_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeOfaccount_comboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeOfaccount_comboBoxActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed

        clearRegistrationForm();
    }//GEN-LAST:event_CancelButtonActionPerformed

    /**
     * Method used to find user and its accounts
     *
     * @param evt - click on button search EGN
     */
    private void search_deleteAccount_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_deleteAccount_btnActionPerformed

        if (FirstName_deleteAccount_lbl.getText().length() != 0
                && EGN_deleteAccount_txt.getText().equals(pin)) {
            return;
        }

        pin = EGN_deleteAccount_txt.getText();
        String request = "search";
        /**
         * check EGN field for 10 digits
         */
        Pattern egn_val = Pattern.compile("\\d{10,10}");
        Matcher m_val = egn_val.matcher(pin);
        if (!m_val.find()) {
            JOptionPane.showMessageDialog(null, "ЕГН може да съдържа само 10 цифри");
            return;
        } else if (!m_val.find() && pin.length() > 10) {
            JOptionPane.showMessageDialog(null, "Твърде много символи! ");
            return;
        }

        //зануляваме потребителската информацията 
        //и връщаме таблицата в начално състояние
        clearDeleteAccountForm();

        /**
         * creates new User object
         *
         */
        newUser = new User();
        newUser.setEgn(pin);
        newUser.setRequest(request);
        newUser = (User) client.runClient(newUser);

        if (newUser.getResponse() != null) {
            if (newUser.getResponse().equalsIgnoreCase("userNotFound")) {
                JOptionPane.showMessageDialog(null, "Не е намерен потебител с такова ЕГН!");
                return;
            }
        }

        FirstName_deleteAccount_lbl.setText(newUser.getName());
        SecondName_deleteAccount_lbl.setText(newUser.getSurname());
        LastName_deleteAccount_lbl.setText(newUser.getFamilyname());

        if (newUser.getAccounts() != null) {
            for (Accounts currentAccout : newUser.getAccounts()) {
                int i = 0;
                modelTable.insertRow(i++, new Object[]{currentAccout.getIBAN(),
                    currentAccout.getIBAN().substring(10), currentAccout.getAccountType(),
                    currentAccout.getAmount(), currentAccout.getCurrency()});
            }
        }
    }//GEN-LAST:event_search_deleteAccount_btnActionPerformed

    private void Delete_deleteAccount_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_deleteAccount_btnActionPerformed

        int answer = JOptionPane.showConfirmDialog(null, "Сигурни ли сте, че искате да изтриете избраната сметка?", "Изтриване", JOptionPane.YES_NO_OPTION);

        if (answer == 0) {
            int row = Accounts_table.getSelectedRow();
            String iban = Accounts_table.getValueAt(row, 0).toString();
            accounts.setIBAN(iban);
            accounts.setRequest("delete");
            accounts = (Accounts) client.runClient(accounts);

            modelTable.removeRow(Accounts_table.getSelectedRow());
        }
    }//GEN-LAST:event_Delete_deleteAccount_btnActionPerformed

    private void userName_txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userName_txtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            userName_txt.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            Nme_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_userName_txtKeyPressed

    private void Nme_registrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Nme_registrKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            userName_txt.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            secondName_resitr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_Nme_registrKeyPressed

    private void surNme_registrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_surNme_registrKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            secondName_resitr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            comboBoxDateOfBirth.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_surNme_registrKeyPressed

    private void comboBoxDateOfBirthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboBoxDateOfBirthKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            surNme_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            PIN_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_comboBoxDateOfBirthKeyPressed

    private void PIN_registrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PIN_registrKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            comboBoxDateOfBirth.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            comboBoxCountry.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_PIN_registrKeyPressed

    private void city_registrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_city_registrKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            comboBoxCountry.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            address_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_city_registrKeyPressed

    private void secondName_resitrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secondName_resitrKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            Nme_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            surNme_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }

    }//GEN-LAST:event_secondName_resitrKeyPressed

    private void address_registrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_address_registrKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            city_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            phone_restr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_address_registrKeyPressed

    private void phone_restrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phone_restrKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            address_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            mail_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_phone_restrKeyPressed

    private void comboBoxUserTypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboBoxUserTypeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            mail_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            comboBoxUserType.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_comboBoxUserTypeKeyPressed

    private void mail_registrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mail_registrKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            phone_restr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            comboBoxUserType.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_mail_registrKeyPressed

    private void comboBoxCountryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboBoxCountryKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ConfirmButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            PIN_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            city_registr.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_comboBoxCountryKeyPressed

    private void EGN_deleteAccount_txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EGN_deleteAccount_txtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            search_deleteAccount_btn.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            DeleteBankingAccount.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_EGN_deleteAccount_txtKeyPressed

    private void DeleteClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteClientActionPerformed

        CardLayout DeleteClient = (CardLayout) (CentralCardLayoutPanel.getLayout());
        DeleteClient.show(CentralCardLayoutPanel, "DeleteClientCard");
        EGN_deleteAccount_txt.grabFocus();

        // populate all user data into the table
        allUsers = new User();
        allUsers.setRequest("getAll");
        allUsers = (User) client.runClient(allUsers);

        clearDeleteModelTable();

        if (allUsers.getAllUser() != null) {
            for (User currentUser : allUsers.getAllUser()) {
                int i = 0;
                DeleteModel.insertRow(i++, new Object[]{currentUser.getName(),
                    currentUser.getSurname(), currentUser.getFamilyname(),
                    currentUser.getEgn(), currentUser.getCity(),
                    currentUser.getAddress(), currentUser.getPhone()});
            }
        }
    }//GEN-LAST:event_DeleteClientActionPerformed

    private void searchClient_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClient_btnActionPerformed

        pin = clientEgn_txt.getText();
        /**
         * check EGN field for 10 digits
         */
        Pattern egn_val = Pattern.compile("\\d{10,10}");
        Matcher m_val = egn_val.matcher(pin);
        if (!m_val.find()) {
            JOptionPane.showMessageDialog(null, "ЕГН може да съдържа само 10 цифри");
            return;
        }

        // select that row in the table in which contains the pin searched 
        for (int i = 0; i < DeleteModel.getRowCount(); i++) {
            if (DeleteModel.getValueAt(i, 3) == null) {
                continue;
            }
            if (pin.equalsIgnoreCase(DeleteModel.getValueAt(i, 3).toString())) {
                allClientsTable.setRowSelectionInterval(i, i);
                return;
            }
        }
        JOptionPane.showMessageDialog(null, "Не е намерен потребител с такъв ЕГН!");
    }//GEN-LAST:event_searchClient_btnActionPerformed

    private void Cancel_deleteAccount_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_deleteAccount_btnActionPerformed
        clearDeleteAccountForm();
    }//GEN-LAST:event_Cancel_deleteAccount_btnActionPerformed

    private void egn_txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_egn_txtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            serach.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewAccountButton.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            typeOfaccount_comboBox.grabFocus();
        }
    }//GEN-LAST:event_egn_txtKeyPressed

    private void InitialAmount_txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InitialAmount_txtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Create_createAccount_btn.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewAccountButton.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            egn_txt.grabFocus();
        }
    }//GEN-LAST:event_InitialAmount_txtKeyPressed

    private void typeOfaccount_comboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_typeOfaccount_comboBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            CreateNewAccountButton.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            EUR_checkbox.grabFocus();
        }
    }//GEN-LAST:event_typeOfaccount_comboBoxKeyPressed

    private void clientEgn_txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientEgn_txtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            DeleteClient.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            EUR_checkbox.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            searchClient_btn.doClick();
        }
    }//GEN-LAST:event_clientEgn_txtKeyPressed

    private void CreateNewClientButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CreateNewClientButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            CreateNewClientButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            userName_txt.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            CreateNewAccountButton.grabFocus();
        }

    }//GEN-LAST:event_CreateNewClientButtonKeyPressed

    private void CreateNewAccountButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CreateNewAccountButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            CreateNewAccountButton.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            egn_txt.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            DeleteBankingAccount.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            CreateNewClientButton.grabFocus();
        }
    }//GEN-LAST:event_CreateNewAccountButtonKeyPressed

    private void DeleteBankingAccountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DeleteBankingAccountKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DeleteBankingAccount.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            EGN_deleteAccount_txt.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            DeleteClient.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            CreateNewAccountButton.grabFocus();
        }
    }//GEN-LAST:event_DeleteBankingAccountKeyPressed

    private void DeleteClientKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DeleteClientKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DeleteClient.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            clientEgn_txt.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            exit_btn.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            DeleteBankingAccount.grabFocus();
        }
    }//GEN-LAST:event_DeleteClientKeyPressed

    private void exit_btnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_exit_btnKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            exit_btn.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            DeleteClient.grabFocus();
        }
    }//GEN-LAST:event_exit_btnKeyPressed
    /**
     * creates method for clearing out the form
     */
    // TODO : Бубе, направи си такива методи за всяка една форма,
    // а не един мето да чисти всичките. Викай си ги за сътветната форма ;)
    private void clearRegistrationForm() {
        userName_txt.setText("");
        Nme_registr.setText("");
        secondName_resitr.setText("");
        surNme_registr.setText("");
        PIN_registr.setText("");
        comboBoxDateOfBirth.setSelectedIndex(0);
        comboBoxMonthOfBirth.setSelectedIndex(0);
        comboBoxYearOfBirth.setSelectedIndex(0);
        comboBoxCountry.setSelectedIndex(0);
        city_registr.setText("");
        address_registr.setText("");
        phone_restr.setText("");
        mail_registr.setText("");
        comboBoxUserType.setSelectedIndex(0);
    }

    private void clearNewAccountForm() {
        egn_txt.setText("");
        IBAN_txt.setText("");
        FirstName_lbl.setText("");
        SecondName_lbl.setText("");
        FamilyName_lbl.setText("");
        BGN_checkbox.setSelected(true);
        InitialAmount_txt.setText("");
        typeOfaccount_comboBox.setSelectedIndex(0);
    }

    private void clearDeleteAccountForm() {
        FirstName_deleteAccount_lbl.setText("");
        SecondName_deleteAccount_lbl.setText("");
        LastName_deleteAccount_lbl.setText("");
        while (modelTable.getRowCount() > 0) {
            modelTable.removeRow(0);
        }
        for (int i = 0; i < 21; i++) {
            modelTable.insertRow(i, new Object[]{});
        }
    }

    private void clearDeleteModelTable() {
        while (DeleteModel.getRowCount() > 0) {
            DeleteModel.removeRow(0);
        }
        for (int i = 0; i < 21; i++) {
            DeleteModel.insertRow(i, new Object[]{});
        }
    }

    public String generateIBAN() {
        // begging of the IBAN: BG + code + EBUBank initials + Sofia postal code.
        String IBAN = "BG11ELUB1632";

        // followed by type of account 01, 02, 03, etc.
        String accountType = "0" + (typeOfaccount_comboBox.getSelectedIndex() - 1);
        IBAN += accountType;

        // followed by random code.
        int minValue = 10000000;
        int maxValue = 99999999;
        int IBANrandom = minValue + (int) (Math.random() * ((maxValue - minValue) + 1));
        IBAN += IBANrandom;

        return IBAN;
    }

// Ей това би трябвало да изтрива потребителски акаунти:
//
//        int answer = JOptionPane.showConfirmDialog(null, "Сигурни ли сте, че искате"
//                + " да изтриете потребителския акаунт?", "Изтриване", JOptionPane.YES_NO_OPTION);
//
//        if (answer == 0) {
//            int row = allClientsTable.getSelectedRow();
//            pin = allClientsTable.getValueAt(row, 3).toString();
//
//            for (User userToBeDeleted : allUsers) {
//                if (userToBeDeleted.getEgn().equalsIgnoreCase(pin)) {
//                    userToBeDeleted.setRequest("delete");
//                    userToBeDeleted = (User) client.runClient(userToBeDeleted);
//                }
//            }
//            // DeleteModel е променлива и не е лошо да е с малка буква, :)
//            // а може и да е някакво по-интуитивно (е момента са modelTable, DeleteModel)
//            // като и 2те са DefaultTableModel пр:
//            // modelTable -> accountsDefTblModel
//            // DeleteModel -> allUsersDefTblModel
//            // или нещо от сорта. ;)
//            DeleteModel.removeRow(allClientsTable.getSelectedRow());
//        }
  

    private final SSLClient client = new SSLClient();
    private Accounts accounts = new Accounts();
    private User newUser;
    private User allUsers;
    private String pin = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Accounts_table;
    private javax.swing.JCheckBox BGN_checkbox;
    private javax.swing.JLabel BackgroundLbl;
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton Cancel_deleteAccount_btn;
    private javax.swing.JPanel CentralCardLayoutPanel;
    private javax.swing.JPanel CheckBox_Panel;
    private javax.swing.JButton ConfirmButton;
    private javax.swing.JButton CreateNewAccountButton;
    private javax.swing.JButton CreateNewClientButton;
    private javax.swing.JButton Create_createAccount_btn;
    private javax.swing.JPanel DeleteAccountPanel;
    private javax.swing.JButton DeleteBankingAccount;
    private javax.swing.JButton DeleteClient;
    private javax.swing.JPanel DeleteClientPanel;
    private javax.swing.JButton Delete_deleteAccount_btn;
    private javax.swing.JTextField EGN_deleteAccount_txt;
    private javax.swing.JLabel ELUBank_lbl;
    private javax.swing.JCheckBox EUR_checkbox;
    private javax.swing.JLabel Egn_lbl;
    private javax.swing.JLabel FamilyName_lbl;
    private javax.swing.JLabel FirstName_deleteAccount_lbl;
    private javax.swing.JLabel FirstName_lbl;
    private javax.swing.JLabel Fname_deleteAccount_lbl;
    private javax.swing.JLabel Fname_lbl;
    private javax.swing.JTextField IBAN_txt;
    private javax.swing.JTextField InitialAmount_txt;
    private javax.swing.JLabel LastName_deleteAccount_lbl;
    private javax.swing.JLabel Lname_lbl;
    private javax.swing.JPanel ManagementPanel;
    private javax.swing.JPanel MenuCardLayoutPanel;
    private javax.swing.JPanel NewAccountPanel;
    private javax.swing.JTextField Nme_registr;
    private javax.swing.JTextField PIN_registr;
    private javax.swing.JPanel RegistrationPanel;
    private javax.swing.JLabel SecondName_deleteAccount_lbl;
    private javax.swing.JLabel SecondName_lbl;
    private javax.swing.JLabel Sname_lbl;
    private javax.swing.JScrollPane TableScrollPane1;
    private javax.swing.JCheckBox USD_checkbox;
    private javax.swing.JPanel WelcomePanel;
    private javax.swing.JLabel Welcome_lbl;
    private javax.swing.JLabel accountType_lbl;
    private javax.swing.JLabel address_lbl;
    private javax.swing.JTextField address_registr;
    private javax.swing.JTable allClientsTable;
    private javax.swing.JLabel city_lbl;
    private javax.swing.JTextField city_registr;
    private javax.swing.JLabel clientEgn_lbl;
    private javax.swing.JTextField clientEgn_txt;
    private javax.swing.JComboBox comboBoxCountry;
    private javax.swing.JComboBox comboBoxDateOfBirth;
    private javax.swing.JComboBox comboBoxMonthOfBirth;
    private javax.swing.JComboBox comboBoxUserType;
    private javax.swing.JComboBox comboBoxYearOfBirth;
    private javax.swing.JLabel country_lbl;
    private javax.swing.ButtonGroup currencyTypeBtnGrp;
    private javax.swing.JLabel currency_lbl;
    private javax.swing.JLabel dateOfBirth_lbl;
    private javax.swing.JLabel egn_deleteAccount_lbl;
    private javax.swing.JLabel egn_lbl;
    private javax.swing.JTextField egn_txt;
    private javax.swing.JLabel email_lbl;
    private javax.swing.JButton exit_btn;
    private javax.swing.JLabel familyname_lbl;
    private javax.swing.JLabel iban_lbl;
    private javax.swing.JLabel idtype_lbl;
    private javax.swing.JLabel initialAmount_lbl;
    private javax.swing.JLabel lastnme_lbl;
    private javax.swing.JTextField mail_registr;
    private javax.swing.JLabel name_lbl;
    private javax.swing.JTextField phone_restr;
    private javax.swing.JButton searchClient_btn;
    private javax.swing.JButton search_deleteAccount_btn;
    private javax.swing.JTextField secondName_resitr;
    private javax.swing.JLabel secondname_lbl;
    private javax.swing.JLabel secondnme_lbl;
    private javax.swing.JLabel separator;
    private javax.swing.JButton serach;
    private javax.swing.JTextField surNme_registr;
    private javax.swing.JScrollPane table_ScrollPane;
    private javax.swing.JLabel telephone_lbl;
    private javax.swing.JComboBox typeOfaccount_comboBox;
    private javax.swing.JTextField userName_txt;
    private javax.swing.JLabel username_lbl;
    // End of variables declaration//GEN-END:variables
}
